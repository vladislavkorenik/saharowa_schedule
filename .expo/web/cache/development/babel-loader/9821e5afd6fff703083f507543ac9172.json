{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _momentRange = require(\"moment-range\");\n\nvar _src = require(\"./src\");\n\nvar _constants = require(\"./constants\");\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\saharowa_schedule\\\\App.js\";\n\nvar momentVar = (0, _momentRange.extendMoment)(_moment.default);\nvar interval = 'month';\nvar count = 2;\nvar dateNow = momentVar(new Date());\nvar range = momentVar.rangeFromInterval(interval, count, dateNow);\nvar days = Array.from(range.by('day'));\n\nvar generateScheduleList = function generateScheduleList(index) {\n  return _react.default.createElement(_src.SubjectList, {\n    day: days[index],\n    key: days[index],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 10\n    }\n  });\n};\n\nvar onScrollHandler = function onScrollHandler(index, setIndex, setScheduleList, scheduleList) {\n  if (days[index]) {\n    setScheduleList([].concat((0, _toConsumableArray2.default)(scheduleList), [generateScheduleList(index)]));\n    setIndex(index + 1);\n  }\n};\n\nvar App = function App() {\n  var _useState = (0, _react.useState)([_react.default.createElement(_src.SubjectList, {\n    day: days[0],\n    key: days[0],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }), _react.default.createElement(_src.SubjectList, {\n    day: days[1],\n    key: days[1],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  })]),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      scheduleList = _useState2[0],\n      setScheduleList = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(2),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      index = _useState4[0],\n      setIndex = _useState4[1];\n\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.StatusBar, {\n    barStyle: \"dark-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_reactNative.View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.ScrollView, {\n    decelerationRate: \"normal\",\n    horizontal: true,\n    snapToInterval: _constants.w,\n    showsHorizontalScrollIndicator: false,\n    onMomentumScrollEnd: function onMomentumScrollEnd() {\n      return onScrollHandler(index, setIndex, setScheduleList, scheduleList);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, scheduleList)));\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});\n\nvar _default = App;\nexports.default = _default;","map":{"version":3,"sources":["D:/saharowa_schedule/App.js"],"names":["momentVar","moment","interval","count","dateNow","Date","range","rangeFromInterval","days","Array","from","by","generateScheduleList","index","onScrollHandler","setIndex","setScheduleList","scheduleList","App","styles","container","w","StyleSheet","create","flex"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;AAEA,IAAMA,SAAS,GAAG,+BAAaC,eAAb,CAAlB;AACA,IAAMC,QAAQ,GAAG,OAAjB;AACA,IAAMC,KAAK,GAAG,CAAd;AACA,IAAMC,OAAO,GAAGJ,SAAS,CAAC,IAAIK,IAAJ,EAAD,CAAzB;AAEA,IAAMC,KAAK,GAAGN,SAAS,CAACO,iBAAV,CAA4BL,QAA5B,EAAsCC,KAAtC,EAA6CC,OAA7C,CAAd;AACA,IAAMI,IAAI,GAAGC,KAAK,CAACC,IAAN,CAAWJ,KAAK,CAACK,EAAN,CAAS,KAAT,CAAX,CAAb;;AAEA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,KAAD,EAAW;AACtC,SAAO,6BAAC,gBAAD;AAAa,IAAA,GAAG,EAAEL,IAAI,CAACK,KAAD,CAAtB;AAA+B,IAAA,GAAG,EAAEL,IAAI,CAACK,KAAD,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAFD;;AAGA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACD,KAAD,EAAQE,QAAR,EAAkBC,eAAlB,EAAmCC,YAAnC,EAAoD;AAC1E,MAAIT,IAAI,CAACK,KAAD,CAAR,EAAiB;AACfG,IAAAA,eAAe,4CAAKC,YAAL,IAAmBL,oBAAoB,CAACC,KAAD,CAAvC,GAAf;AACAE,IAAAA,QAAQ,CAACF,KAAK,GAAG,CAAT,CAAR;AACD;AACF,CALD;;AAOA,IAAMK,GAAqB,GAAG,SAAxBA,GAAwB,GAAM;AAAA,kBACM,qBAAS,CAC/C,6BAAC,gBAAD;AAAa,IAAA,GAAG,EAAEV,IAAI,CAAC,CAAD,CAAtB;AAA2B,IAAA,GAAG,EAAEA,IAAI,CAAC,CAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD+C,EAE/C,6BAAC,gBAAD;AAAa,IAAA,GAAG,EAAEA,IAAI,CAAC,CAAD,CAAtB;AAA2B,IAAA,GAAG,EAAEA,IAAI,CAAC,CAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF+C,CAAT,CADN;AAAA;AAAA,MAC3BS,YAD2B;AAAA,MACbD,eADa;;AAAA,mBAKR,qBAAS,CAAT,CALQ;AAAA;AAAA,MAK3BH,KAL2B;AAAA,MAKpBE,QALoB;;AAOlC,SACE,4DACE,6BAAC,sBAAD;AAAW,IAAA,QAAQ,EAAC,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,uBAAD;AACE,IAAA,gBAAgB,EAAC,QADnB;AAEE,IAAA,UAAU,MAFZ;AAGE,IAAA,cAAc,EAAEC,YAHlB;AAIE,IAAA,8BAA8B,EAAE,KAJlC;AAKE,IAAA,mBAAmB,EAAE;AAAA,aAAMP,eAAe,CAACD,KAAD,EAAQE,QAAR,EAAkBC,eAAlB,EAAmCC,YAAnC,CAArB;AAAA,KALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGA,YAPH,CADF,CAFF,CADF;AAgBD,CAvBD;;AAyBA,IAAME,MAAM,GAAGG,wBAAWC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,IAAI,EAAE;AADG;AADoB,CAAlB,CAAf;;eAMeN,G","sourcesContent":["import React, { useState } from 'react'\nimport { StyleSheet, ScrollView, View, StatusBar } from 'react-native'\nimport moment from 'moment'\nimport { extendMoment } from 'moment-range'\nimport { SubjectList } from './src'\nimport { w } from './constants'\n\nconst momentVar = extendMoment(moment)\nconst interval = 'month'\nconst count = 2\nconst dateNow = momentVar(new Date())\n\nconst range = momentVar.rangeFromInterval(interval, count, dateNow)\nconst days = Array.from(range.by('day'))\n\nconst generateScheduleList = (index) => {\n  return <SubjectList day={days[index]} key={days[index]} />\n}\nconst onScrollHandler = (index, setIndex, setScheduleList, scheduleList) => {\n  if (days[index]) {\n    setScheduleList([...scheduleList, generateScheduleList(index)])\n    setIndex(index + 1)\n  }\n}\n\nconst App: () => React$Node = () => {\n  const [scheduleList, setScheduleList] = useState([\n    <SubjectList day={days[0]} key={days[0]} />,\n    <SubjectList day={days[1]} key={days[1]} />\n  ])\n  const [index, setIndex] = useState(2)\n\n  return (\n    <>\n      <StatusBar barStyle=\"dark-content\" />\n      <View style={styles.container}>\n        <ScrollView\n          decelerationRate=\"normal\"\n          horizontal\n          snapToInterval={w}\n          showsHorizontalScrollIndicator={false}\n          onMomentumScrollEnd={() => onScrollHandler(index, setIndex, setScheduleList, scheduleList)}\n        >\n          {scheduleList}\n        </ScrollView>\n      </View>\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n})\n\nexport default App\n"]},"metadata":{},"sourceType":"script"}